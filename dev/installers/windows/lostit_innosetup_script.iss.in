; =============================================================================
; @file    lostit_innosetup_script.iss
; @brief   Inno Setup script for Lost It!
; @author  Michael Hucka <mhucka@caltech.edu>
; @license Please see the file named LICENSE in the project directory
; @website https://github.com/caltechlibrary/lostit
; =============================================================================

#define MyAppName "LostIt"
#define MyAppVersion "@@VERSION@@"
#define MyAppPublisher "Caltech DLD"
#define MyAppURL "https://github.com/caltechlibrary/lostit"
#define MyAppExeName "LostIt.exe"

[Setup]
; .............................................................................
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)

AppId={{70159B80-2224-4213-B793-6156073E95E3}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
OutputDir=Z:\project-files\library\repos\lostit\dist
OutputBaseFilename=LostIt_win10_x64_@@VERSION@@
SetupIconFile=Z:\project-files\library\repos\lostit\dev\icons\generated-icons\lostit-icon-512px.ico
Compression=lzma
SolidCompression=yes
ArchitecturesInstallIn64BitMode=x64
ChangesEnvironment=true
PrivilegesRequired=admin


[Languages]
; .............................................................................

Name: "english"; MessagesFile: "compiler:Default.isl"


[Files]
; .............................................................................

; NOTE: Don't use "Flags: ignoreversion" on any shared system files
;
Source: "\\Mac\Home\project-files\library\repos\lostit\dist\LostIt.exe"; DestDir: "{app}"; Flags:
Source: "\\Mac\Home\project-files\library\repos\lostit\ABOUT.html"; DestDir: "{app}"; Flags: isreadme


[Icons]
; .............................................................................

Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"


[Tasks]
; .............................................................................
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked


[Registry]
; .............................................................................

; Add the installation directory to the command search path.
;
; This code is from https://stackoverflow.com/a/3431379
; with the modification that I make it add the path under both HKLM and HKLM64
;
Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; \
    ValueType: expandsz; ValueName: "Path"; ValueData: "{olddata};{app}"; \
    Check: NeedsAddPath('{app}')
Root: HKLM64; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; \
    ValueType: expandsz; ValueName: "Path"; ValueData: "{olddata};{app}"; \
    Check: NeedsAddPath('{app}')

; Add a registry entry so that we can find the installated folder from Python
;
Root: HKLM; Subkey: "Software\Caltech Library"; Flags: uninsdeletekeyifempty
Root: HKLM64; Subkey: "Software\Caltech Library"; Flags: uninsdeletekeyifempty
Root: HKLM; Subkey: "Software\Caltech Library\LostIt"; Flags: uninsdeletekey
Root: HKLM64; Subkey: "Software\Caltech Library\LostIt"; Flags: uninsdeletekey
Root: HKLM; Subkey: "Software\Caltech Library\LostIt\Settings"; ValueType: string; ValueName: "Path"; ValueData: "{app}"
Root: HKLM64; Subkey: "Software\Caltech Library\LostIt\Settings"; ValueType: string; ValueName: "Path"; ValueData: "{app}"


; Function NeedsAddPath is from https://stackoverflow.com/a/31733896/743730

[Code]
function NeedsAddPath(Param: string): boolean;
var
    OrigPath: string;
    ParamExpanded: string;
begin
    //expand the setup constants like {app} from Param
    ParamExpanded := ExpandConstant(Param);
    if not RegQueryStringValue(HKEY_LOCAL_MACHINE,
      'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
      'Path', OrigPath)
    then begin
      Result := True;
      exit;
    end;
    // look for the path with leading and trailing semicolon and with or without \ ending
    // Pos() returns 0 if not found
    Result := Pos(';' + UpperCase(ParamExpanded) + ';', ';' + UpperCase(OrigPath) + ';') = 0;  
    if Result = True then
       Result := Pos(';' + UpperCase(ParamExpanded) + '\;', ';' + UpperCase(OrigPath) + ';') = 0; 
end;
